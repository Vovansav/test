// 1. Первое задание
let x = 3;
let y = 6;
let result = -y++ - 5 + (x *= ++y + 2) / x++;

/*
console.log( -y++ - 5 + (x*= ++y + 2) / x++ ) === - 10;
console.log((x*= ++y + 2) / x++ +  -y++ - 5) === - 11;
Опытным путём и с подсказки преподавателя выяснено что действия выполнятся в след последовательности:
1. -y++ = - 6 , т.к. вернётся предыдущее значение а не увеличенное
2. -y++ - 5 = -6 - 5 = -11; всё логично
3. x *= ++y + 2 = x * (++y + 2) = 3 * ( 7+1 + 2) = 30; вернётся новое значение y = 8, при чём х станет = 30;
4. 30/x++ = 30/30= 1, т.к. вернётся старое значение а не новое, потому что постфиксный инкремент
5. -11 + 1 = - 10;
 */
console.log(result);

// 2. Второе задание
let userName = prompt('Скажите, как вас зовут?');
alert('Здравствуй ' + userName);
//
// // 3. Третье задание
let a = +prompt('Введите число A');
let b = +prompt('Введите число B');
if ( a > b ) {
    alert('Число '+ a + ' больше '+ 'числа '+ b);
} else if ( a < b) {
    alert('Число '+ a + ' меньше '+ 'числа '+ b);
} else if ( a === b ) {
    alert('Число '+ a + ' равно '+ 'числу '+ b);
} else {
    alert('Требовалось ввести 2 числа');
}

// 4. Четвёртое задание
let numberUser = prompt('Введите число от 1 до 100');
if (isNaN(numberUser)) {
    alert('Требовалось ввести число')
} else {
    numberUser= +numberUser;
    if ( numberUser < 1 || numberUser > 99) { // взял условие что строго до 100, т.е. 99 максимальное
        alert('Ошибка, требовалось ввести число от 1 до 100');
    } else {
        if ( numberUser % 2 === 0 ) {
            alert('Число ' + numberUser + ' чётное');
        } else {
            alert('Число ' + numberUser + ' нечётное');
        }
        if ( numberUser % 3 === 0 ) {
            alert('Число ' + numberUser + ' делится на 3');
        }
        if ( numberUser % 5 === 0 ) {
            alert('Число ' + numberUser + ' делится на 5');
        }
        if ( numberUser % 7 === 0 ) {
            alert('Число ' + numberUser + ' делится на 7');
        }
        if (numberUser < 10 ) {
            alert('В числе ' + numberUser + ' одна цифра');
        } else {
            alert('В числе ' + numberUser + ' две цифры');
        }
        if ( numberUser === 11 ) {
            alert('Число ' + numberUser + ' в лото называют барабанные палочки');
        }
        if ( numberUser === 13 ) {
            alert('Число ' + numberUser + ' в лото называют чёртовой дюжиной xD');
        }
        if ( numberUser === 1) {
            alert('Число ' + numberUser +' является первым счастливым числом');
        }
        if ( numberUser === 18 ) {
            alert('Число ' + numberUser + ' является единственным числом, ' +
                'в котором в результате сложения его цифр получается результат в 2 раза меньше его самого');
        }
        if ( numberUser === 5) {
            alert('Тайское произношение цифры ' + numberUser + '' +
                ' звучит как «ха», поэтому во время общения по интернету некоторые тайцы используют сленг «555»,' +
                ' что равнозначно нашему «ха-ха-ха».');
        }
    }

}

// 5. Пятое задание
let loginUser = prompt('Введите ваш логин', '');
if (loginUser === 'Админ') {
    let passwordUser = prompt('Введите пароль' , '');
    if (passwordUser === 'Чёрный Властелин') {
        alert('Добро пожаловать!');
    } else if (passwordUser === null || passwordUser === '') {
        alert('Вход отменён');
    } else {
        alert('Пароль неверен');
    }
} else if (loginUser === null || loginUser === '') {
    alert('Вход отменён');
} else {
    alert('Я вас не знаю');
}

// 6. Шестое задание
//  1. "" + 1 + 0 == '10' - если одно из слогаемых строка, то происходит строковое преобразование при знаке '+';
//  2. "" - 1 + 0 == -1 - здесь знак '-' поэтому происходит численное преобразование, пустая строка == 0;
//  3. true + false == 1 + 0 == 1 - true это 1 false это 0;
//  4. 6 / "3" = 6/3 == 2 - при знаке '/' происходит численное преобразование;
//  5. "2" * "3" == 6 - аналогично со знаком '/' тоже происходит численное преобразование;
//  6. 4 + 5 + "px" == '45px' - сначало сложение а потом строковое преобразование;
//  7. "$" + 4 + 5 == '$45' - в этом случает строковое преобразование, т. к. выполняется слева направо;
//  8. "4" - 2 == 2 - численное преобразование как и в примере 2;
//  9. "4px" - 2 == NaN - должно быть численное преобразование, но так как в этом случае сделать нельзя поэтому NaN;
//  10. 7 / 0 == Infinity - специально числовое значение ( бесконечность), любое число (кроме 0) делим на 0 -> бесконечность;
//  11. "  -9\n" + 5 == ' -9\n5' - строка + число->строковое преобразование;
//  12. "  -9\n" - 5 == - 14 - при числовом преобразовании пробельные символы такие как : \n, \t, не учитываются;
//  13. 5 && 2 == 2 - если все значения true, то возвращает последнее;
//  14. 2 && 5 == 5 - аналогично с предыдущим примером;
//  15. 5 || 0 == 5 - возвращает первое истинное значение, если его нет то возвращает последнее значение;
//  16. 0 || 5 == 5 - аналогично с предыдущим примером, 0 - это ложное значение;
//  17. null + 1 == 1 - null == 0, 0 + 1 == 1;
//  18. undefined + 1 == NaN - undefined преобразуется к NaN, NaN + 1 == NaN;
//  19. null == "\n0\n" - false, null равен только undefined при нестрогом сравнении и не равны ничему другому;
//  20. +null == +"\n0\n" - true, т. к. сначало происходит числовое преобразование null -> 0, 0 == 0;
//  21. 0 || "0" && {} - {}, сначало $$, где оба значение true b вернётся последнее истинное 0 || {} -> {} - первое истинное;
//  22. !!"false" == !!"true" - true преобразование двух непустых строк в логические выражения, true == true -> true;
//  23. "foo" + + "bar" == 'fooNaN' - +'bar' числовое преобразование которое вернёт NaN, а потом строковое;
//  24. true == 'true' - false, приводится каждое значение к числу, true == 1, 'true' == NaN, NaN не равно ничему;
//  25. false == 'false' - false, аналогично с предыдущим примером;
